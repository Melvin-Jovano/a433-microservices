192:a433-microservices macbookair$ docker-compose up
Creating volume "app-db" with default driver
Pulling item-db (mongo:3)...
3: Pulling from library/mongo
92473f7ef455: Pull complete
fb52bde70123: Pull complete
64788f86be3f: Pull complete
33f6d5f2e001: Pull complete
570e56656608: Pull complete
f518a872ab12: Pull complete
c9bdae151f64: Pull complete
b2c58da5f563: Pull complete
2928038a6053: Pull complete
29a16c1b79ab: Pull complete
efec0f86077c: Pull complete
261a04726d31: Pull complete
7c4062426e72: Pull complete
Digest: sha256:146c1fd999a660e697aac40bc6da842b005c7868232eb0b7d8996c8f3545b05d
Status: Downloaded newer image for mongo:3
Creating item-db ... done
Creating a433-microservices_item-app_1 ... done
Attaching to item-db, a433-microservices_item-app_1
item-db     | 2023-10-14T16:45:32.262+0000 I CONTROL  [initandlisten] MongoDB starting : pid=1 port=27017 dbpath=/data/db 64-bit host=7ed0935451b8
item-db     | 2023-10-14T16:45:32.266+0000 I CONTROL  [initandlisten] db version v3.6.23
item-db     | 2023-10-14T16:45:32.267+0000 I CONTROL  [initandlisten] git version: d352e6a4764659e0d0350ce77279de3c1f243e5c
item-db     | 2023-10-14T16:45:32.267+0000 I CONTROL  [initandlisten] OpenSSL version: OpenSSL 1.0.2g  1 Mar 2016
item-db     | 2023-10-14T16:45:32.267+0000 I CONTROL  [initandlisten] allocator: tcmalloc
item-db     | 2023-10-14T16:45:32.267+0000 I CONTROL  [initandlisten] modules: none
item-db     | 2023-10-14T16:45:32.268+0000 I CONTROL  [initandlisten] build environment:
item-db     | 2023-10-14T16:45:32.268+0000 I CONTROL  [initandlisten]     distmod: ubuntu1604
item-db     | 2023-10-14T16:45:32.268+0000 I CONTROL  [initandlisten]     distarch: x86_64
item-db     | 2023-10-14T16:45:32.269+0000 I CONTROL  [initandlisten]     target_arch: x86_64
item-db     | 2023-10-14T16:45:32.275+0000 I CONTROL  [initandlisten] options: { net: { bindIpAll: true } }
item-db     | 2023-10-14T16:45:32.276+0000 I STORAGE  [initandlisten] 
item-db     | 2023-10-14T16:45:32.276+0000 I STORAGE  [initandlisten] ** WARNING: Using the XFS filesystem is strongly recommended with the WiredTiger storage engine
item-db     | 2023-10-14T16:45:32.276+0000 I STORAGE  [initandlisten] **          See http://dochub.mongodb.org/core/prodnotes-filesystem
item-db     | 2023-10-14T16:45:32.276+0000 I STORAGE  [initandlisten] wiredtiger_open config: create,cache_size=481M,cache_overflow=(file_max=0M),session_max=20000,eviction=(threads_min=4,threads_max=4),config_base=false,statistics=(fast),compatibility=(release="3.0",require_max="3.0"),log=(enabled=true,archive=true,path=journal,compressor=snappy),file_manager=(close_idle_time=100000),statistics_log=(wait=0),verbose=(recovery_progress),
item-db     | 2023-10-14T16:45:33.604+0000 I STORAGE  [initandlisten] WiredTiger message [1697301933:604793][1:0x7f1074cbda40], txn-recover: Set global recovery timestamp: 0
item-db     | 2023-10-14T16:45:33.785+0000 I CONTROL  [initandlisten] 
item-db     | 2023-10-14T16:45:33.785+0000 I CONTROL  [initandlisten] ** WARNING: Access control is not enabled for the database.
item-db     | 2023-10-14T16:45:33.786+0000 I CONTROL  [initandlisten] **          Read and write access to data and configuration is unrestricted.
item-db     | 2023-10-14T16:45:33.787+0000 I CONTROL  [initandlisten] 
item-db     | 2023-10-14T16:45:33.790+0000 I STORAGE  [initandlisten] createCollection: admin.system.version with provided UUID: febf08c4-d3e4-456f-afdb-65478fe36ed5
item-db     | 2023-10-14T16:45:33.857+0000 I COMMAND  [initandlisten] setting featureCompatibilityVersion to 3.6
item-db     | 2023-10-14T16:45:33.864+0000 I STORAGE  [initandlisten] createCollection: local.startup_log with generated UUID: 0b11ed59-f230-43c7-b2c9-0d7bc9f19fea
item-db     | 2023-10-14T16:45:33.925+0000 I FTDC     [initandlisten] Initializing full-time diagnostic data capture with directory '/data/db/diagnostic.data'
item-db     | 2023-10-14T16:45:33.931+0000 I NETWORK  [initandlisten] listening via socket bound to 0.0.0.0
item-db     | 2023-10-14T16:45:33.932+0000 I NETWORK  [initandlisten] listening via socket bound to /tmp/mongodb-27017.sock
item-db     | 2023-10-14T16:45:33.932+0000 I NETWORK  [initandlisten] waiting for connections on port 27017
item-db     | 2023-10-14T16:45:33.950+0000 I STORAGE  [LogicalSessionCacheRefresh] createCollection: config.system.sessions with generated UUID: caf3a8cb-c528-4a6b-aa0a-aeb5c352e4a4
item-db     | 2023-10-14T16:45:34.059+0000 I INDEX    [LogicalSessionCacheRefresh] build index on: config.system.sessions properties: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }
item-db     | 2023-10-14T16:45:34.059+0000 I INDEX    [LogicalSessionCacheRefresh]       building index using bulk method; build may temporarily use up to 500 megabytes of RAM
item-db     | 2023-10-14T16:45:34.063+0000 I INDEX    [LogicalSessionCacheRefresh] build index done.  scanned 0 total records. 0 secs
item-db     | 2023-10-14T16:45:34.064+0000 I COMMAND  [LogicalSessionCacheRefresh] command config.$cmd command: createIndexes { createIndexes: "system.sessions", indexes: [ { key: { lastUse: 1 }, name: "lsidTTLIndex", expireAfterSeconds: 1800 } ], $db: "config" } numYields:0 reslen:98 locks:{ Global: { acquireCount: { r: 2, w: 2 } }, Database: { acquireCount: { w: 2, W: 1 } }, Collection: { acquireCount: { w: 2 } } } protocol:op_msg 129ms
item-app_1  | 
item-app_1  | > docker-software-delivery@1.0.0 start /app
item-app_1  | > node ./bin/www
item-app_1  | 
item-app_1  | NODE_ENV: production
item-db     | 2023-10-14T16:45:35.299+0000 I NETWORK  [listener] connection accepted from 172.19.0.3:35872 #1 (1 connection now open)
item-db     | 2023-10-14T16:45:35.320+0000 I NETWORK  [conn1] received client metadata from 172.19.0.3:35872 conn1: { driver: { name: "nodejs", version: "2.2.36" }, os: { type: "Linux", name: "linux", architecture: "x64", version: "5.10.104-linuxkit" }, platform: "Node.js v14.21.3, LE, mongodb-core: 2.1.20" }
item-app_1  | Connected to database